from db import db


class StoreModel(db.Model):

    # Table to store the details of available stores identified by attributes - ID, NAME
    __tablename__ = 'stores'

    # Columns of the table
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(80))

    # Define a relationship with ItemModel table for foreign key
    items = db.relationship('ItemModel')

    # Initialize the store object with name
    # ID is primary key - will be auto generated by table
    def __init__(self, name):
        self.name = name

    # Return a JSON representation of the object
    def json(self):
        return {'name': self.name, 'items': [item.json() for item in self.items]}

    # Return a store object identified by the store name
    @classmethod
    def get_store(cls, name):
        return cls.query.filter_by(name=name).first()

    # Save or update store object to database
    def save_to_db(self):
        db.session.add(self)
        db.session.commit()

    # Delete store object from database
    def delete_from_db(self):
        db.session.delete(self)
        db.session.commit()
